@* https://github.com/valums/file-uploader http://fineuploader.com/*@

@{
    CC.Models.CustomerDocumentsModel dataModel = ViewBag.CustomerDocumentsData;
}

@using (Ajax.BeginForm(new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "fileUploadDialog" }))
{
    @Html.Hidden("AccountID", dataModel.AccountID);
    @Html.Hidden("DocGroupID", dataModel.DocGroupID);
    @Html.Hidden("RefID", dataModel.RefID);
    @Html.Hidden("AccidentID", dataModel.AccidentID);
                                                    
    <span id="fileUploadDialogHeader">@dataModel.UserName</span>
    
	<div id="file-uploader-demo1">		
		<noscript>			
			<p>Please enable JavaScript to use file uploader.</p>
		</noscript>         
	</div>

    <table id='fileUploaderList' class='file-uploader-list'>
        <colgroup>
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
            <col />
        </colgroup>
        <thead>
            <tr>
                <th>Nr.</th>
                <th>Dokumento pavadinimas</th>
                <th>Failo pavadinimas</th>
                <th>Failo dydis</th>
                <th>Dokumento tipas</th>
                <th colspan="2">Komandos</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
    
    <div style="padding-top:10px;">
        <input id="triggerUpload" class="btn btn-primary" type="button" value="Išsaugoti dokumentus" disabled="disabled" />
    </div>

    <div id="tblDocTypesListTemplate" style="display: none;">
        @Html.DropDownList("docTypes", dataModel.DocTypes, new { @class = "dropDownTemplate" })
    </div>
    
    <div id="dvDescription" class="bottomWindow">
        <div class="MemoHeader">
            <a href="#" class="right-centered ui-corner-all" onclick="return CloseThisMemo(this);" title="Paslėpti pastabą">
                <span class="ui-icon ui-icon-closethick">close</span>
            </a>
        </div>
        <textarea class="txtDescription" cols="90" rows="15">
        </textarea>
    </div>
    
    <script type="text/javascript">
        var uploader = new qq.CustomizedFileUploader({
            element: document.getElementById('file-uploader-demo1'),
            listElement: document.getElementById('fileUploaderList'),
            fileTemplate: "<tr id='{fileId}'} class='colored-row' data-isSelected='0'>" +
                            "<td  class='rightAligned'>{fileNumber}</td>" +
                            "<td><input type='text' name='fileName' value='{shortFileName}'>" +
                            "<td><span class='qq-upload-file'>{fileName}</span></td>" +
                            "<td name='fileSize' class='rightAligned'>{fileSize}</td>" +
                            "<td>{tblDocTypesDropDown}</td>" +
                            "<td>" +
                                "<a href='#' onclick='return ShowThisMemo(this);'>Aprašymas</a>" +
                                "<textarea name='current-memo' style='display: none;' cols='90' rows='15' ></textarea>" +
                            "</td>" +
                            "<td>" +
                                "<span class='qq-upload-size'></span>" +
                                "<a class='qq-upload-cancel' href='#' onclick='return RemoveFile(this)'>{cancelButtonText}</a>" +
                                "<div class='qq-progress-bar'></div>" +
                                "<span class='qq-upload-spinner'></span>" +
                                "<span class='qq-upload-finished'></span>" +
                                "<span class='qq-upload-failed-text'>{failUploadtext}</span>" +
                            "</td>" +
                          "</tr>",
            addToListFunction: function (id, fileName, fileSize) {
                var cancelButtonText = this['cancelButtonText'];
                var template = FormatFileRow(this['fileTemplate'], id, fileName, fileSize, cancelButtonText);
                $('#fileUploaderList').append(template);
            },
            action: '@Url.Action("Start", "Files")',
            autoUpload: false,
            button: document.getElementById('file-select-button'),
            uploadButtonText: "Įkelti dokumentus",
            cancelButtonText: 'Ištrinti',
            //disableCancelForFormUploads: true,
            forceMultipart: true,
            onSubmit: function (id, fileName) {
                $('#triggerUpload:disabled').removeAttr('disabled');
                $('#fileUploaderList').show();
                return true;
            },
            onComplete: function (id, fileName, responseJSON) {
                $('#triggerUpload').attr('disabled', 'disabled');
            },
            onCancel: function (id, fileName) {
                var argument = '#fileUploaderList tbody tr#' + id;
                $(argument).remove();
            },
            onPrepareParams: function (id) {
                var rzlt = PrepareHiddenParameters();
                var argument = '#fileUploaderList tbody tr#' + id;
                PrepareRowParameters($(argument), rzlt);
                return rzlt;
            }
        });

        $('#triggerUpload').click(function () {
            var selectedRow = $("#fileUploaderList tbody tr[data-isSelected='1']");
            if (selectedRow.length > 0) 
                CloseThisMemo(null);
            uploader.uploadStoredFiles();
        });

        function FormatFileRow(template, id, fileName, fileSize, cancelButtonText) {
            var rowNumber = Number(id) + 1;
            var shortFileName = fileName.substr(0, fileName.lastIndexOf('.')) || fileName;
            var dropDown = $('#tblDocTypesListTemplate').clone().removeAttr('id').html();

            var rzlt = template.replace(/\{fileId\}/g, id).replace(/\{fileNumber\}/g, rowNumber);
            rzlt = rzlt.replace(/\{shortFileName\}/g, shortFileName).replace(/\{fileName\}/g, fileName);
            rzlt = rzlt.replace(/\{fileSize\}/g, fileSize).replace(/\{cancelButtonText\}/g, cancelButtonText);
            rzlt = rzlt.replace(/\{tblDocTypesDropDown\}/g, dropDown);
            return rzlt;
        }

        function RemoveFile(currentElement)
        {
            var fileId = $(currentElement).closest('tr[id]').attr('id');
            $('#' + fileId).remove();
        }

        function CloseThisMemo(aLink) {
            var memoValue = $('#dvDescription textarea.txtDescription').val();
            var selectedRow = $("#fileUploaderList tr[data-isSelected='1']");
            selectedRow.find("td textarea[name='current-memo']").val(memoValue);
            selectedRow.attr('data-isSelected', '0');
            $('#dvDescription').hide();
            return false;
        }
        function ShowThisMemo(aLink) {
            var thisElement = $(aLink);
            var memoValue = thisElement.siblings('textarea:hidden').val();
            $('#dvDescription textarea.txtDescription').val(memoValue);
            var selectedRow = thisElement.closest("tr");
            selectedRow.attr('data-isSelected', '1');
            selectedRow.siblings().attr('data-isSelected', '0');
            $('#dvDescription').show();
        }

        function PrepareHiddenParameters()
        {
            var rzlt = {};
            rzlt['AccountID'] = $('#AccountID').val();
            rzlt['DocGroupID'] = $('#DocGroupID').val();
            rzlt['RefID'] = $('#RefID').val();
            rzlt['AccidentID'] = $('#AccidentID').val();
            return rzlt;
        }
        function PrepareRowParameters(currentRow, rzlt) {
            rzlt['fileName'] = currentRow.find("td input[name='fileName']").val();
            rzlt['currentMemo'] = currentRow.find("td textarea[name='current-memo']").val();
            rzlt['docTypeID'] = currentRow.find("td select.dropDownTemplate").val();
            rzlt['fileSize'] = currentRow.find("td[name='fileSize']").text();
        }
    </script>
}
