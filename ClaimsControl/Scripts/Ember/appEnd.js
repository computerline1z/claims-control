// Generated by CoffeeScript 1.6.3
(function() {
  var w=window, App=w.App, Em=w.Em, oGLOBAL=w.oGLOBAL, oDATA=w.oDATA, oCONTROLS=w.oCONTROLS, MY=w.MY;;
  App.ClaimsView = App.mainMenuView.extend({
    templateName: "tmpClaims",
    viewIx: 1
  });

  App.MapView = App.mainMenuView.extend({
    templateName: "tmpMap",
    viewIx: 2
  });

  App.ReportsView = App.mainMenuView.extend({
    templateName: "tmpReports",
    viewIx: 3
  });

  App.Router = Em.Router.extend({
    executed: {},
    enableLogging: false,
    location: "hash",
    root: Em.Route.extend({
      viewAccidents: function(router, e) {
        if ($(e.target).hasClass("notactive")) {
          return router.transitionTo("tabAccidents");
        } else {
          if ($("#divAccidentsList").css("display") === 'block') {

          } else {
            $("#divAccidentsList").css("display", "block");
            $("#divAccidentEdit").css("display", "none");
            return $("#tabAccidents").addClass("colmask");
          }
        }
      }
    }, Em.State.transitionTo("tabAccidents"), {
      viewClaims: function(router, e) {
        var iD;
        if (e.context) {
          if (e.target.tagName.toUpperCase() === "A") {
            iD = $(e.target).data("id");
            if (iD) {
              console.log("ActivityID: " + iD);
              App.tabClaimsRegulationController.clickActivityID = iD;
            }
          }
          if (!e.context.claimNo) {
            e.context.claimNo = e.context.accident.no + "-" + e.context.no;
          }
          return router.transitionTo("claimRegulation", e.context);
        } else {
          return router.transitionTo("claimList");
        }
      },
      viewMap: Em.State.transitionTo("tabMap"),
      viewReports: Em.State.transitionTo("tabReports"),
      viewLists: function(router, e) {
        if ($(e.target).hasClass("notactive")) {
          return router.transitionTo("tabLists");
        } else {
          return router.get("applicationController").connectOutlet("listsOutlet", "topLists");
        }
      },
      viewAdmin: Em.State.transitionTo("tabAdmin"),
      tabAccidents: Em.Route.extend({
        route: "/",
        connectOutlets: function(router, context) {
          MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 0
          });
          return $("#divAccidentsList").find("div.col2").css("top", "0");
        }
      }),
      claimList: Em.Route.extend({
        route: "/claims",
        connectOutlets: function(router, context) {
          return MY.NavbarController.fnSetNewTab({
            newState: "tabClaims",
            viewIx: 1,
            transparent: true,
            hide: "#divClaimRegulation",
            show: "#divClaimsList",
            needUrl: "Main/tabClaims",
            callBack: function() {
              App.claimsStart();
              router.get("applicationController").connectOutlet("claimsOutlet", "tabClaims");
              return router.get("applicationController").connectOutlet("claimsSidePanelOutlet", "sidePanelForClaims");
            }
          });
        }
      }),
      claimRegulation: Em.Route.extend({
        route: "/claim/:claimNo",
        connectOutlets: function(router, context) {
          return MY.NavbarController.fnSetNewTab({
            newState: "tabClaims",
            viewIx: 1,
            transparent: true,
            show: "#divClaimRegulation",
            hide: "#divClaimsList",
            needUrl: "Main/tabClaims",
            callBack: function() {
              var accNo, accident, clNo, claim, no_;
              App.claimsStart();
              if (!context.accident) {
                no_ = context.claimNo.split("-");
                accNo = parseInt(no_[0], 10);
                clNo = parseInt(no_[1], 10);
                accident = oDATA.GET("proc_Accidents").emData.find(function(a) {
                  if (a.no === accNo) {
                    return true;
                  }
                  return false;
                });
                claim = oDATA.GET("proc_Claims").emData.find(function(c) {
                  if (c.no === clNo ? c.accidentID === accident.iD : void 0) {
                    return true;
                  }
                  return false;
                });
                if (!claim) {
                  router.transitionTo("tabAccidents");
                  return false;
                }
                App.claimsController.setClaimContext(claim);
                $.extend(context, claim);
              }
              App.tabClaimsRegulationController.set("claim", context);
              return router.get("applicationController").connectOutlet("claimRegulationOutlet", "tabClaimsRegulation");
            }
          });
        }
      }),
      tabReports: Em.Route.extend({
        route: "/reports",
        connectOutlets: function(router, context) {
          MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 3
          });
          if ($("#tabReports").length ? $("#tabReports>div").html().length : void 0) {
            return false;
          }
          return oDATA.fnLoad2({
            url: "Main/tabReports",
            callBack: function() {
              App.reportsStart();
              return router.get("applicationController").connectOutlet("reportsOutlet", "tabReportsMain");
            }
          });
        }
      }),
      tabLists: Em.Route.extend({
        route: "/tabLists",
        connectOutlets: function(router, context) {
          MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 4,
            transparent: true
          });
          return oDATA.fnLoad2({
            url: "Main/tabLists",
            checkFn: "App.listsStart",
            runAllways: true,
            callBack: function() {
              App.listsStart();
              return router.get("applicationController").connectOutlet("listsOutlet", "topLists");
            }
          });
        },
        /*
        			toListAll: Em.Route.extend(
        				route:'/all',
        				connectOutlets: (router, context) ->
        					if MY.NavbarController.fnSetNewTab(newState: router.currentState.name,viewIx: 4,newOutlet: "tabLists")
        						d = $(context.target).parent().data("ctrl")
        						App.listAllController.set "current", d
        						router.get("applicationController").connectOutlet "listsOutlet", d.goTo
        			)
        */

        toListAll: function(router, context) {
          var d;
          if (MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 4,
            newOutlet: "tabLists"
          })) {
            d = $(context.target).parent().data("ctrl");
            App.listAllController.set("current", d);
            return router.get("applicationController").connectOutlet("listsOutlet", d.goTo);
          }
        },
        toTop: function(router, context) {
          MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 4,
            transparent: true
          });
          App.listsStart();
          return router.get("applicationController").connectOutlet("listsOutlet", "topLists");
        }
      }),
      tabAdmin: Em.Route.extend({
        route: "/tabAdmin",
        connectOutlets: function(router, context) {
          MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: 5,
            transparent: true
          });
          return oDATA.fnLoad2({
            url: "Main/tabAdmin",
            callBack: function() {
              App.adminStart();
              console.log(".connectOutlet('adminOutlet', 'tabAdmin');");
              return router.get("applicationController").connectOutlet("adminOutlet", "tabAdmin");
            }
          });
        }
      }),
      tabUserCard: Em.Route.extend({
        route: "/tabUserCard",
        connectOutlets: function(router, context) {
          var ix;
          ix = (App.userCardController.myInfo ? -1 : 5);
          if (MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: ix,
            newOutlet: "tabAdmin"
          })) {
            return router.get("applicationController").connectOutlet("adminOutlet", "tabUserCard");
          }
        }
      }),
      tabMyCard: Em.Route.extend({
        route: "/tabMyCard",
        connectOutlets: function(router, context) {
          if (MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: -1,
            newOutlet: "tabAdmin"
          })) {
            return router.get("applicationController").connectOutlet("adminOutlet", "tabUserCard");
          }
        }
      }),
      tabChangePass: Em.Route.extend({
        route: "/changePass",
        connectOutlets: function(router, context) {
          if (MY.NavbarController.fnSetNewTab({
            newState: router.currentState.name,
            viewIx: -1,
            newOutlet: "tabEmpty"
          })) {
            return router.get("applicationController").connectOutlet("emptyOutlet", "changeUserPass");
          }
        }
      })
    })
  });

  App.initialize();

  $(function() {
    $("#userLink").on("click", function(e) {
      App.userCardController.setUser({
        myInfo: true
      });
      App.router.transitionTo("tabMyCard");
      return false;
    });
    $("body").hoverIntent({
      over: function(e) {
        var data, div, ext, field, frm, frmOpt, offset, t, txt;
        t = $(this);
        ext = t.closest(".ExtendIt");
        data = ext.data("ctrl");
        field = (data.colLabels ? data.colLabels : data.Field);
        frm = t.closest(".js-frm");
        frmOpt = (frm.data("ctrl") ? frm.data("ctrl") : {});
        if (!frm.length || !frmOpt.Source) {
          console.error("wrong source:");
          console.log(frm);
        }
        txt = App.Lang.tables[t.closest(".js-frm").data("ctrl").Source].Cols[field].tip;
        if (!txt) {
          console.error("no txt:");
          console.log(frm);
        }
        offset = ext.offset();
        div = $("<div id='js-tip-id' class='js-tip js-tip-info' style=\"left:" + offset.left + "px;top:" + offset.top + "px;width:" + ext.width() + "px;\">" + txt + "</div>").appendTo("body");
        if (offset.top - div.height() - 20 > $(window).scrollTop()) {
          div.addClass("js-tip-top").offset({
            top: div.offset().top - div.height() - 20
          });
        } else {
          div.addClass("js-tip-bottom").offset({
            top: div.offset().top + ext.height() + div.height()
          });
        }
        return div.fadeIn("slow");
      },
      out: function(e) {
        return $("#js-tip-id").fadeOut("slow").remove();
      },
      selector: "label.js-tip-help"
    });
    return Em.run.next(function() {
      return $("#tabAccidents,#tabClaims,#tabReports,#tabLists,#tabAdmin").on("focus", "input:text,textarea", function(e) {
        return $(e.target).addClass("activeField");
      }).on("blur", "input:text,textarea", function(e) {
        return $(e.target).removeClass("activeField");
      });
    });
  });

}).call(this);

/*
//@ sourceMappingURL=appEnd.map
*/
