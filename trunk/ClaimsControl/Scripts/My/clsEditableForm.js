// Generated by CoffeeScript 1.3.3
(function() {
  var clsEditableForm;

  clsEditableForm = (function() {
    var fnResetForm, fnSaveChanges;

    function clsEditableForm(options) {
      var Action, AddToTitle, Config, Row, id, ix, oData, opt;
      $("body").css("cursor", "wait");
      opt = {
        DialogFormId: "divDialogForm",
        fnAddNewForm: "Dialog",
        CallBackAfter: 0,
        aRowData: 0,
        Title: 0
      };
      $.extend(opt, options);
      id = opt.aRowData != null ? opt.aRowData.iD : 0;
      oData = oDATA.GET(opt.objData);
      Action = opt.Action;
      if (oData == null) {
        alert("Neradau objekto " + opt.objData + " clsEditableForm klaseje");
      }
      Row = {
        Cols: oData.Cols,
        Grid: oData.Grid,
        Data: opt.aRowData
      };
      if (id && !(Row.Data != null)) {
        Row.Data = oData.emData.findProperty("iD", id);
      }
      if (!opt.Title) {
        Config = oData.Config;
        opt.Title = Action === "Add" ? Config.Msg.AddNew : Config.Msg.Edit;
        if (Config.Msg.AddToTitle && Action === "Edit") {
          AddToTitle = (function() {
            var _i, _len, _ref, _results;
            _ref = Config.Msg.AddToTitle;
            _results = [];
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              ix = _ref[_i];
              _results.push(Row.Data[ix]);
            }
            return _results;
          })();
          opt.Title += " - " + AddToTitle.join(' ');
        }
      }
      this.fnLoadEditableForm(opt, id, oData, Row);
      $("body").css("cursor", "default");
    }

    clsEditableForm.prototype.fnLoadEditableForm = function(opt, id, oData, Row) {
      var Config, dlgEditableOpt, form, _html;
      Config = $.extend(true, {}, {
        Source: opt.objData
      }, oData.Config);
      if (!opt.form || opt.form === "Dialog") {
        dlgEditableOpt = {
          autoOpen: false,
          minWidth: '35em',
          minHeight: '40em',
          width: '50em',
          modal: true,
          title: opt.Title,
          draggable: true,
          buttons: {
            "Išsaugoti pakeitimus": function() {
              return fnSaveChanges(opt, oData, Row);
            },
            "Ištrinti": function() {
              return $(this).dialog("close");
            },
            "Atšaukti": function() {
              return $(this).dialog("close");
            }
          },
          close: function() {
            $("div.validity-tooltip").remove();
            return $(this).remove();
          },
          dragStart: function() {
            return $("div.validity-tooltip").remove();
          }
        };
        _html = opt.RenderHTML ? opt.RenderHTML : this.fnGenerateHTML(Row, id, Config, opt);
        $("#dialog:ui-dialog").dialog("destroy");
        $("<div id='" + opt.DialogFormId + "'></div>").html(_html).dialog(dlgEditableOpt).dialog('open');
      } else {
        _html = opt.RenderHTML ? opt.RenderHTML : this.fnGenerateHTML(Row, id, Config, opt);
        $(_html).append('<button style="float:right;" title="Atšaukti">Atšaukti</button>').find('button:last').button().click(function() {
          return fnResetForm(opt);
        }).end().append('<button style="float:right;" title="Išsaugoti">Išsaugoti</button>').find('button:last').button().click(function() {
          return fnSaveChanges(opt, oData, Row);
        }).end().appendTo(opt.form).append('<div style="clear:both;"></div>').prepend("<h3>" + opt.Title + "</h3>");
      }
      oCONTROLS.UpdatableForm($("#divEditableForm"));
      form = $("#" + opt.DialogFormId).parent();
      form.find("button:contains('Išsaugoti')").attr("disabled", "disabled").addClass("ui-state-disabled");
      form.find("input, textarea").bind('click keyup', function() {
        return form.find("button:contains('Išsaugoti')").removeAttr("disabled").removeClass("ui-state-disabled");
      });
      form.find("div.ExtendIt button").click(function() {
        return form.find("button:contains('Išsaugoti')").removeAttr("disabled").removeClass("ui-state-disabled");
      });
      return form.find("button:contains('Ištrinti')").css("display", "none");
    };

    fnResetForm = function(opt) {
      if (opt.target) {
        opt.target.css("display", "block");
      }
      return opt.form.empty();
    };

    fnSaveChanges = function(opt, oData, Row) {
      var DataToSave;
      DataToSave = oCONTROLS.ValidateForm($('#divEditableForm'));
      if (DataToSave) {
        return SERVER.update({
          Action: opt.Action,
          DataToSave: DataToSave,
          CallBack: {
            Success: function(resp, updData) {
              if (opt.Action === "Add") {
                Row.Data = Em.Object.create({});
                Row.Data.iD = resp.ResponseMsg.ID;
              }
              Row.Cols.forEach(function(col, i) {
                var Field, fieldName, id, infoRow, ok, source;
                ok = false;
                fieldName = col.FName.slice(0, 1).toLowerCase() + col.FName.slice(1);
                updData.DataToSave.Fields.forEach(function(updateField, i2) {
                  if (col.FName === updateField) {
                    Row.Data[fieldName] = updData.DataToSave.Data[i2];
                    return ok = true;
                  }
                }, !ok && (opt.Action === "Add" && fieldName !== "iD") ? col.IdInMe ? (infoRow = Row.Cols[col.IdInMe], source = infoRow.List.Source, Field = infoRow.FName, id = oCONTROLS.helper.getData_fromDataToSave(updData.DataToSave, Field), Row.Data[fieldName] = oDATA.GET(source).emData.findProperty("iD", id).MapArrToString(infoRow.List.iText, false)) : col.Default ? col.Default === "Today" ? Row.Data[fieldName] = oGLOBAL.date.getTodayString() : col.Default === "UserName" ? Row.Data[fieldName] = UserData.Name() : col.Default === "UserId" ? Row.Data[fieldName] = UserData.Id() : Row.Data[fieldName] = col.Default : Row.Data[fieldName] = "" : void 0);
                return console.log("col: " + col.FName + ", ok: " + ok + ", fieldValue:" + Row.Data[fieldName]);
              });
              if (opt.Action === "Add") {
                oDATA.GET(opt.objData).emData.pushObject(Row.Data);
              }
              if (opt.CallBackAfter) {
                opt.CallBackAfter(Row.Data);
              }
              if (!opt.form || opt.form === "Dialog") {
                return $("#" + opt.DialogFormId).dialog("close");
              } else {
                return fnResetForm(opt);
              }
            }
          },
          Msg: "",
          BlockCtrl: $('#divEditableForm')
        });
      } else if (DataToSave === 0) {
        return $("#" + opt.DialogFormId).dialog("close");
      }
    };

    clsEditableForm.prototype.fnGenerateHTML = function(Row, id, Config, opt) {
      var Append, Head, Length, colVal, html, i, inewVals, n, t, val;
      Length = Row.Cols.length;
      i = 0;
      html = "";
      Head = "";
      inewVals = 0;
      if (opt.newVals) {
        opt.newVals.vals = opt.newVals.vals instanceof Array ? opt.newVals.vals : opt.newVals.vals.split(" ");
      }
      while (i < Length) {
        Append = "";
        n = Row.Cols[i].FName;
        n = n.slice(0, 1).toLowerCase() + n.slice(1);
        colVal = Row.Data[n];
        if ((Row.Grid.aoColumns[i].sTitle != null) && !(Row.Cols[i].IdInMe || Row.Cols[i].NotEditable)) {
          if ((colVal != null) && colVal) {
            if (typeof colVal === "number") {
              val = colVal;
            } else {
              t = (Row.Cols[i].Type ? Row.Cols[i].Type : "");
              val = (t === "String" || t === "Email") || t.substring(0, 4) === "Date" ? '"' + colVal.replace(/"/g, "\\u0027") + '"' : colVal;
            }
          } else if (opt.newVals != null) {
            if (n === opt.newVals.cols[inewVals]) {
              val = opt.newVals.vals[inewVals] ? '"' + opt.newVals.vals[inewVals].replace(/"/g, "\\u0027") + '"' : "\"\"";
              inewVals++;
            } else {
              val = "\"\"";
            }
          } else {
            val = "\"\"";
          }
          Append += "\"Value\":" + val + ",";
          html += "<div class='ExtendIt' data-ctrl='{" + Append + "\"Field\":\"" + Row.Cols[i].FName + "\",\"classes\":\"UpdateField\",\"labelType\":\"Left\"}'></div>";
        }
        i++;
      }
      if (id != null) {
        Head = '"NewRec":0,"id":' + id + ',';
      } else {
        Head = '"NewRec":1,';
      }
      Head += '"Source":"' + Config.Source + '","tblUpdate":"' + Config.tblUpdate + '"';
      return "<div id='divEditableForm' class='inputform' style='margin:0 2em;' data-ctrl='{" + Head + "}'>" + html + "</div>";
    };

    return clsEditableForm;

  })();

  window.oGLOBAL.clsEditableForm=clsEditableForm;


}).call(this);
