// Generated by CoffeeScript 1.3.3
(function() {
  ﻿;

  var clsEditableForm;

  clsEditableForm = (function() {
    var fnResetForm, fnSaveChanges;

    function clsEditableForm(options) {
      var Action, AddToTitle, Config, Row, id, ix, oData, opt, rows, _i, _len, _ref;
      $("body").css("cursor", "wait");
      opt = {
        DialogFormId: "divDialogForm",
        fnAddNewForm: "Dialog",
        CallBackAfter: 0,
        aRowData: 0,
        Title: 0
      };
      $.extend(opt, options);
      id = opt.aRowData != null ? opt.aRowData[0] : 0;
      oData = oDATA.GET(opt.objData);
      Action = opt.Action;
      if (oData == null) {
        alert("Neradau objekto " + opt.objData + " clsEditableForm klaseje");
      }
      Row = {
        Cols: oData.Cols,
        Grid: oData.Grid,
        Data: opt.aRowData
      };
      if (id && !(Row.Data != null)) {
        _ref = oData.Data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          rows = _ref[_i];
          if (rows[0] === id) {
            Row.Data = rows;
            break;
          }
        }
      }
      if (!opt.Title) {
        Config = oData.Config;
        opt.Title = Action === "Add" ? Config.Msg.AddNew : Config.Msg.Edit;
        if (Config.Msg.AddToTitle && Action === "Edit") {
          AddToTitle = (function() {
            var _j, _len1, _ref1, _results;
            _ref1 = Config.Msg.AddToTitle;
            _results = [];
            for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
              ix = _ref1[_j];
              _results.push(Row.Data[ix]);
            }
            return _results;
          })();
          opt.Title += " - " + AddToTitle.join(' ');
        }
      }
      this.fnLoadEditableForm(opt, id, oData, Row);
      $("body").css("cursor", "default");
    }

    clsEditableForm.prototype.fnLoadEditableForm = function(opt, id, oData, Row) {
      var Config, dlgEditableOpt, form, _html;
      Config = $.extend(true, {}, {
        Source: opt.objData
      }, oData.Config);
      if (!opt.form || opt.form === "Dialog") {
        dlgEditableOpt = {
          autoOpen: false,
          minWidth: '35em',
          minHeight: '40em',
          width: '50em',
          modal: true,
          title: opt.Title,
          draggable: true,
          buttons: {
            "Išsaugoti pakeitimus": function() {
              return fnSaveChanges(opt, oData, Row);
            },
            "Ištrinti": function() {
              return $(this).dialog("close");
            },
            "Atšaukti": function() {
              return $(this).dialog("close");
            }
          },
          close: function() {
            $("div.validity-tooltip").remove();
            return $(this).remove();
          },
          dragStart: function() {
            return $("div.validity-tooltip").remove();
          }
        };
        _html = opt.RenderHTML ? opt.RenderHTML : this.fnGenerateHTML(Row, id, Config);
        $("#dialog:ui-dialog").dialog("destroy");
        $("<div id='" + opt.DialogFormId + "'></div>").html(_html).dialog(dlgEditableOpt).dialog('open');
      } else {
        _html = opt.RenderHTML ? opt.RenderHTML : this.fnGenerateHTML(Row, id, Config);
        $(_html).append('<button style="float:right;" title="Atšaukti">Atšaukti</button>').find('button:last').button().click(function() {
          return fnResetForm(opt);
        }).end().append('<button style="float:right;" title="Išsaugoti">Išsaugoti</button>').find('button:last').button().click(function() {
          return fnSaveChanges(opt, oData, Row);
        }).end().appendTo(opt.form).append('<div style="clear:both;"></div>').prepend("<h3>" + opt.Title + "</h3>");
      }
      oCONTROLS.UpdatableForm($("#divEditableForm"));
      form = $("#" + opt.DialogFormId).parent();
      form.find("button:contains('Išsaugoti')").attr("disabled", "disabled").addClass("ui-state-disabled");
      form.find("input, textarea").bind('click keyup', function() {
        return form.find("button:contains('Išsaugoti')").removeAttr("disabled").removeClass("ui-state-disabled");
      });
      form.find("div.ExtendIt button").click(function() {
        return form.find("button:contains('Išsaugoti')").removeAttr("disabled").removeClass("ui-state-disabled");
      });
      return form.find("button:contains('Ištrinti')").css("display", "none");
    };

    fnResetForm = function(opt) {
      if (opt.target) {
        opt.target.css("display", "block");
      }
      return opt.form.empty();
    };

    fnSaveChanges = function(opt, oData, Row) {
      var DataToSave;
      DataToSave = oCONTROLS.ValidateForm($('#divEditableForm'));
      if (DataToSave) {
        return SERVER.update({
          Action: opt.Action,
          DataToSave: DataToSave,
          CallBack: {
            Success: function(resp, updData) {
              var Found, RowI, RowLength, TextId, f, id, ix, obj, updI, updLength;
              RowLength = Row.Cols.length;
              RowI = 0;
              updLength = updData.DataToSave.Fields.length;
              if (opt.Action === "Add") {
                Row.Data = new Array(RowLength);
                Row.Data[0] = resp.ResponseMsg.ID;
                oData.Data.push(Row.Data);
              }
              while (RowI < RowLength - 1) {
                updI = 0;
                Found = 0;
                RowI++;
                while (updI < updLength) {
                  if (Row.Cols[RowI].FName === updData.DataToSave.Fields[updI]) {
                    Row.Data[RowI] = updData.DataToSave.Data[updI];
                    Found = 1;
                    break;
                  }
                  updI++;
                }
                if (!Found && opt.Action === "Add") {
                  if (Row.Cols[RowI].Default != null) {
                    if (Row.Cols[RowI].Default === "Today") {
                      Row.Data[RowI] = fnGetTodayDateString();
                    } else if (Row.Cols[RowI].Default === "UserName") {
                      Row.Data[RowI] = UserData.Name();
                    } else if (Row.Cols[RowI].Default === "UserId") {
                      Row.Data[RowI] = UserData.Id();
                    } else {
                      Row.Data[RowI] = Row.Cols[RowI].Default;
                    }
                  } else if (Row.Cols[RowI].UpdateField) {
                    f = Row.Cols[RowI].UpdateField;
                    Row.Data[RowI] = updData.DataToSave[f];
                  } else {
                    Row.Data[RowI] = "";
                  }
                }
                if (Row.Data[RowI] === null) {
                  Row.Data[RowI] = "";
                }
              }
              RowI = 0;
              while (RowI < RowLength - 1) {
                RowI++;
                if (Row.Cols[RowI].IdInMe) {
                  ix = Row.Cols[RowI].IdInMe;
                  id = Row.Data[ix];
                  obj = Row.Cols[ix].List.Source;
                  TextId = Row.Cols[ix].List.iText;
                  Row.Data[RowI] = oData.GetStringFromIndexes(id, obj, TextId);
                }
              }
              if (opt.CallBackAfter) {
                opt.CallBackAfter(Row.Data);
              }
              if (!opt.form || opt.form === "Dialog") {
                return $("#" + opt.DialogFormId).dialog("close");
              } else {
                return fnResetForm(opt);
              }
            }
          },
          Msg: "",
          BlockCtrl: $('#divEditableForm')
        });
      } else if (DataToSave === 0) {
        return $("#" + opt.DialogFormId).dialog("close");
      }
    };

    clsEditableForm.prototype.fnGenerateHTML = function(Row, id, Config) {
      var Append, Head, Length, html, i, t, val;
      Length = Row.Cols.length;
      i = 0;
      html = "";
      Head = "";
      while (i < Length) {
        Append = "";
        if (Row.Grid.aoColumns[i].sTitle != null) {
          if ((Row.Data[i] != null) && Row.Data[i]) {
            t = (Row.Cols[i].Type ? Row.Cols[i].Type : "");
            val = (t === "String" || t === "Email") || t.substring(0, 4) === "Date" ? '"' + Row.Data[i].replace(/"/g, "\\u0027") + '"' : Row.Data[i];
          } else {
            val = "\"\"";
          }
          Append += "\"Value\":" + val + ",";
          html += "<div class='ExtendIt' data-ctrl='{" + Append + "\"Field\":\"" + Row.Cols[i].FName + "\",\"classes\":\"UpdateField\",\"labelType\":\"Left\"}'></div>";
        }
        i++;
      }
      if (id != null) {
        Head = '"NewRec":0,"id":' + id + ',';
      } else {
        Head = '"NewRec":1,';
      }
      Head += '"Source":"' + Config.Source + '","tblUpdate":"' + Config.tblUpdate + '"';
      return "<div id='divEditableForm' class='inputform' style='margin:0 2em;' data-ctrl='{" + Head + "}'>" + html + "</div>";
    };

    return clsEditableForm;

  })();

  window.oGLOBAL.clsEditableForm=clsEditableForm;


}).call(this);
